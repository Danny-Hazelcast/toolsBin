#!/bin/bash

cleanup() {
    exitCode=$?
 
    provisioner --terminate

    if (( $exitCode != 0 )) ; then 
      hear=$(pwd)	
      hear=$( echo "${hear}" | grep -oh workspace.*)
      slackPost simulator-fail FAIL \<http://54.87.52.100/~jenkins/${hear}\> exit code !=0
    fi

    exit $exitCode
}

trap "cleanup" INT TERM EXIT

boxCount=2
memberBox=0
members=2
clients=2
duration=1h
ee=false
machienSpec=""
testDir=""
hzBranch=""

OPTS=`getopt -o : --long  boxCount:,memberBox:,members:,clients:,duration:,ee:,machienSpec:,testDir:,hzBranch: -n 'parse-options' -- "$@"` 
if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi

initCmdArgs () { 
 eval set -- "$OPTS"
  
 while true; do
  case "$1" in
    --ee ) ee="$2"; shift 2 ;;
    --boxCount ) boxCount="$2"; shift 2 ;;
    --memberBox ) memberBox="$2"; shift 2 ;; 
    --members ) members="$2"; shift 2 ;;
    --clients ) clients="$2"; shift 2 ;;
    --duration ) duration="$2"; shift 2  ;;
    --machienSpec ) machienSpec="$2"; shift 2  ;;
    --testDir ) testDir="$2"; shift 2  ;;
    --hzBranch ) hzBranch="$2"; shift 2  ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
 done
}

updateRepos () {
 if ! update-stabilizer ; then
   exit 1
 fi
 
 if [ "$hzBranch" == "" ]; then
   if ! update-hazelcast ; then
     exit 1
   fi
 else
   update-hazelcast --hzBranch "${hzBranch}"
   getHazelcastVersion
 fi

 if [ "$ee" == "true" ]; then 
  if ! update-hazelcast-ee ; then
   exit 1
  fi
 fi

 if ! update-eeTests ; then
   exit 1
 fi
}

setSimulatorProps () {
 cp $SIMULATOR_HOME/simulator-tests/*.properties .
 cp ~/configuration/run .
 cp ~/configuration/simulator.properties .

 if [ -n "${testDir}" ]; then
   cp -fr $SIM_EE_TEST_DIR/${testDir}/. .
 fi

 hzVersion=$(getHazelcastVersion)
 sed -i s/maven=.*/maven="${hzVersion}"/ simulator.properties

 if [ -n "${machienSpec}" ]; then
   sed -i "s|MACHINE_SPEC=.*|MACHINE_SPEC=${machienSpec}|" simulator.properties
 fi
}

provisionBoxes () {
 if ! awsCreate ${boxCount} jenkins-ec2-key ; then
   exit 1
 fi

 if ! provisioner --enterpriseEnabled ${ee} --restart ; then
   exit 1
 fi
 provisioner --clean
}

saveOppSysMsgs () {
 sshAll 'netstat -i' > allBox_netstat-i.txt
 sshAll 'ifconfig eth0' > allBox_ifConfig_eth0.txt
 sshAll 'netstat -s' > allBox_netstat-s.txt
 sshAll 'sudo cat /var/log/messages*' > allBox_logMsg.txt
}

lookForErrors () {
 hprof=$(find . -name *.hprof)
 hs_err=$(find . -name hs_err_pid*)
 failures=$(find . -name failures*)
 core=$(find . -name *.core) 

 if [ -n "${hprof}"  ] || [ -n "${hs_err}"  ] || [ -n "${failures}"  ] || [ -n "${core}"  ]; then
   printf "\nFAIL!\n${hprof}\n${hs_err}\n${failures}\n{core}\n"
   pwd
   exit 1
 fi
}

setDirStruct () {
 output="$(pwd)/$(getHazelcastVersion)/$(date '+%Y_%m_%d-%H_%M_%S')"
 mkdir -p ${output}
 cp agents.txt ${output} 2>/dev/null
 cd ${output}
}

mainFunction () {
 initCmdArgs

 updateRepos
 setDirStruct

 setSimulatorProps
 provisionBoxes

 ./run ${boxCount} ${memberBox} ${members} ${clients} ${duration}

 saveOppSysMsgs
 lookForErrors
}

mainFunction 

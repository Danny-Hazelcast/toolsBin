# ==[ printSlack ]=============================================================
# Function to send output from the commandline to Slack.
#
# @parameter string $LEVEL   INFO/ERROR/WARNING message. Changes emoji
# @parameter string $MESSAGE Message to send to slack. 

  SLACK_CHANNEL=$1
  SLACK_HOSTNAME=${SLACK_HOSTNAME-'oops.slack.com'};
  SLACK_TOKEN=${SLACK_TOKEN-'oops'};
  SLACK_BOTNAME=${SLACK_BOTNAME-'danny c'};
  SLACK_BOTEMOJI=${SLACK_BOTEMOJI-':mega:'}

  SEVERITY=${2-'INFO'};
  ICON=':slack:';

  case "$SEVERITY" in
    INFO)
      ICON=':page_with_curl:';
      shift;
      ;;
    WARN|WARNING)
      ICON=':warning:';
      shift;
      ;;
    ERROR|ERR|FAIL)
      ICON=':bangbang:';
      shift;
      ;;
    *)
      ICON=':slack:';
      ;;
  esac

#  echo $SLACK_CHANNEL
#  echo $SEVERITY
#  echo $ICON

  MESSAGE=$@;


  PAYLOAD="payload={\"channel\": \"#${SLACK_CHANNEL}\", \"username\": \"${SLACK_BOTNAME}\", \"text\": \"${ICON} ${MESSAGE}\", \"icon_emoji\": \"${SLACK_BOTEMOJI}\"}";

#  echo $PAYLOAD

  CURL_RESULT=$(curl -s -S -X POST --data-urlencode "$PAYLOAD" https://hooks.slack.com/services/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);

  if [ -z "$CURL_RESULT" ]; then
    exit 0;
  else
    exit 1;
  fi

